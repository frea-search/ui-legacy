stages:
  - docker-build
  - deploy-docs
  - test

snyk:
  stage: test
  image: node:latest
  script:
    - npm install -g snyk
    - snyk test

build:
  stage: docker-build
  needs:
    - job: snyk
  image: docker:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "devel"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build --tag $CI_REGISTRY_IMAGE:devel --file Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:devel
  tags:
    - docker-build

release_build:
  stage: docker-build
  needs:
    - job: snyk
  image: docker:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build --tag $CI_REGISTRY_IMAGE:latest --file Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - docker-build

build_pages:
  variables:
    CLOUDFLARE_API_TOKEN: $CLOUDFLARE_API_TOKEN
    CLOUDFLARE_ACCOUNT_ID: $CLOUDFLARE_ACCOUNT_ID
  stage: deploy-docs
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "devel"
  script:
    - apk add py3-pip python3-dev nodejs npm
    - pip install mkdocs-material
    - mkdocs build --strict --verbose
    - npm install -g wrangler --unsafe-perm=true
    - wrangler pages publish ./public --project-name=frea-dev-docs

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Jobs/SAST-IaC.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml

sast:
  stage: test

container_scanning:
  variables:
    CS_IMAGE: docker.io/nexryai/frea:devel

